{
  "contractName": "TokenReceiver",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "premioTokenDado",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "premioToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"premioTokenDado\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"premioToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Very simple example of a contract receiving ERC20 tokens.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"TokenReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Curso Solidity Avanzado BlockChain Academy/proyecto-react/contracts/TokenReceiver.sol\":\"TokenReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Curso Solidity Avanzado BlockChain Academy/proyecto-react/contracts/TokenReceiver.sol\":{\"keccak256\":\"0x534065b05413c6992391d16ab6c2ed5e7aa70e65e22e43bf91f45e5af53b3a60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd9efb67f7aa1f448c7ae19b2237537ef3297c6608b6a79643a2b752cf97e39\",\"dweb:/ipfs/QmSfiXPHB6vJPgg5ubPbiwgpgcP36a2ZKd2pFi2daeaXVG\"]},\"/D/Curso Solidity Avanzado BlockChain Academy/proyecto-react/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"/D/Curso Solidity Avanzado BlockChain Academy/proyecto-react/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"/D/Curso Solidity Avanzado BlockChain Academy/proyecto-react/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"/D/Curso Solidity Avanzado BlockChain Academy/proyecto-react/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161039f38038061039f8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b61027f806101206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063843b216614610030575b600080fd5b61003861003a565b005b600033905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd823060016040518463ffffffff1660e01b815260040161009d939291906101a1565b602060405180830381600087803b1580156100b757600080fd5b505af11580156100cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ef919061013f565b507f7f1b1d4c13ec5ec7f238dce036cc6fa16068f0b9013ca915898afa496daac0ad8160405161011f9190610186565b60405180910390a150565b60008151905061013981610232565b92915050565b60006020828403121561015157600080fd5b600061015f8482850161012a565b91505092915050565b610171816101d8565b82525050565b61018081610220565b82525050565b600060208201905061019b6000830184610168565b92915050565b60006060820190506101b66000830186610168565b6101c36020830185610168565b6101d06040830184610177565b949350505050565b60006101e3826101f6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061022b82610216565b9050919050565b61023b816101ea565b811461024657600080fd5b5056fea26469706673582212204a88a65673db8c68e1c6572129a4684c398367295453edd605498e60e0bb3c1f64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063843b216614610030575b600080fd5b61003861003a565b005b600033905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd823060016040518463ffffffff1660e01b815260040161009d939291906101a1565b602060405180830381600087803b1580156100b757600080fd5b505af11580156100cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ef919061013f565b507f7f1b1d4c13ec5ec7f238dce036cc6fa16068f0b9013ca915898afa496daac0ad8160405161011f9190610186565b60405180910390a150565b60008151905061013981610232565b92915050565b60006020828403121561015157600080fd5b600061015f8482850161012a565b91505092915050565b610171816101d8565b82525050565b61018081610220565b82525050565b600060208201905061019b6000830184610168565b92915050565b60006060820190506101b66000830186610168565b6101c36020830185610168565b6101d06040830184610177565b949350505050565b60006101e3826101f6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061022b82610216565b9050919050565b61023b816101ea565b811461024657600080fd5b5056fea26469706673582212204a88a65673db8c68e1c6572129a4684c398367295453edd605498e60e0bb3c1f64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1012:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "85:95:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "95:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "110:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "104:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "104:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "95:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "168:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$1317",
                      "nodeType": "YulIdentifier",
                      "src": "126:41:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "126:48:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "126:48:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$1317_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "63:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "71:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "79:5:7",
                "type": ""
              }
            ],
            "src": "7:173:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "278:222:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "324:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "333:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "336:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "326:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "326:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "326:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "299:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "308:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "295:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "295:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "291:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "291:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "288:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "350:143:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "365:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "379:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "369:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "394:89:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "455:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "466:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "451:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "451:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "475:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$1317_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "404:46:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "404:79:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "394:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1317_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "248:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "259:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "271:6:7",
                "type": ""
              }
            ],
            "src": "186:314:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "551:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "561:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "590:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "572:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "572:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "561:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "533:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "543:7:7",
                "type": ""
              }
            ],
            "src": "506:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "678:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "707:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "689:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "689:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "678:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$1317",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "650:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "660:7:7",
                "type": ""
              }
            ],
            "src": "608:111:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "770:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "780:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "795:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "802:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "791:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "791:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "780:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "752:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "762:7:7",
                "type": ""
              }
            ],
            "src": "725:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "915:94:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "987:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "996:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "999:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "989:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "989:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "989:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "938:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "978:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$1317",
                              "nodeType": "YulIdentifier",
                              "src": "945:32:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "945:39:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "935:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "935:50:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "928:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "928:58:7"
                  },
                  "nodeType": "YulIf",
                  "src": "925:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$1317",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "908:5:7",
                "type": ""
              }
            ],
            "src": "857:152:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_IERC20_$1317_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$1317(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1317_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1317_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$1317(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1317(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1317(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2062:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:77:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "92:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "108:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "108:30:7"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:7",
                "type": ""
              }
            ],
            "src": "7:137:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "224:204:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "270:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "279:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "282:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "272:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "272:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "272:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "245:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "254:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "241:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "241:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "266:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "237:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "237:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "234:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "296:125:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "311:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "325:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "315:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "340:71:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "383:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "394:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "379:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "379:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "403:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "350:28:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "350:61:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "340:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "194:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "205:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "217:6:7",
                "type": ""
              }
            ],
            "src": "150:278:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "499:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "516:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "539:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "521:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "521:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "509:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "487:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "494:3:7",
                "type": ""
              }
            ],
            "src": "434:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "631:74:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "648:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "692:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_1_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "653:38:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "653:45:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "641:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:58:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "641:58:7"
                }
              ]
            },
            "name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "619:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "626:3:7",
                "type": ""
              }
            ],
            "src": "558:147:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "809:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "819:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "831:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "842:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "827:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "827:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "819:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "899:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "912:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "923:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "908:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "908:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "855:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "855:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "855:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "781:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "793:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "804:4:7",
                "type": ""
              }
            ],
            "src": "711:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1101:296:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1111:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1123:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1134:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1119:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1119:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1111:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1191:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1204:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1215:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1200:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1200:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1147:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1147:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1147:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1272:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1285:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1296:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1281:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1281:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1228:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1228:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1228:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1362:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1375:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1386:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1371:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1371:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1310:51:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1310:80:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1310:80:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1057:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1069:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1077:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1085:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1096:4:7",
                "type": ""
              }
            ],
            "src": "939:458:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1448:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1458:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1487:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1469:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1469:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1458:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1430:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1440:7:7",
                "type": ""
              }
            ],
            "src": "1403:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1547:48:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1557:32:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1582:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1575:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1575:13:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1568:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1568:21:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1557:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1529:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1539:7:7",
                "type": ""
              }
            ],
            "src": "1505:90:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1646:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1656:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1671:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1678:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1667:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1667:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1656:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1628:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1638:7:7",
                "type": ""
              }
            ],
            "src": "1601:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1778:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1788:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1799:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1788:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1760:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1770:7:7",
                "type": ""
              }
            ],
            "src": "1733:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1884:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1894:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1925:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1907:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1907:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1894:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_1_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1864:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1874:9:7",
                "type": ""
              }
            ],
            "src": "1816:121:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1983:76:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2037:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2046:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2049:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2039:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2039:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2039:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2006:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2028:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "2013:14:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2013:21:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2003:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1996:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1996:40:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1993:2:7"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1976:5:7",
                "type": ""
              }
            ],
            "src": "1943:116:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "237:355:2:-:0;;;352:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;400:5;391:6;;:14;;;;;;;;;;;;;;;;;;352:61;237:355;;7:173:7;;110:6;104:13;95:22;;126:48;168:5;126:48;:::i;:::-;85:95;;;;:::o;186:314::-;;320:2;308:9;299:7;295:23;291:32;288:2;;;336:1;333;326:12;288:2;379:1;404:79;475:7;466:6;455:9;451:22;404:79;:::i;:::-;394:89;;350:143;278:222;;;;:::o;506:96::-;;572:24;590:5;572:24;:::i;:::-;561:35;;551:51;;;:::o;608:111::-;;689:24;707:5;689:24;:::i;:::-;678:35;;668:51;;;:::o;725:126::-;;802:42;795:5;791:54;780:65;;770:81;;;:::o;857:152::-;945:39;978:5;945:39;:::i;:::-;938:5;935:50;925:2;;999:1;996;989:12;925:2;915:94;:::o;237:355:2:-;;;;;;;",
  "deployedSourceMap": "237:355:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;421:167;;;:::i;:::-;;;464:12;479:10;464:25;;500:6;;;;;;;;;;:19;;;520:4;534;541:1;500:43;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;559:21;575:4;559:21;;;;;;:::i;:::-;;;;;;;;421:167;:::o;7:137:7:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:278::-;;266:2;254:9;245:7;241:23;237:32;234:2;;;282:1;279;272:12;234:2;325:1;350:61;403:7;394:6;383:9;379:22;350:61;:::i;:::-;340:71;;296:125;224:204;;;;:::o;434:118::-;521:24;539:5;521:24;:::i;:::-;516:3;509:37;499:53;;:::o;558:147::-;653:45;692:5;653:45;:::i;:::-;648:3;641:58;631:74;;:::o;711:222::-;;842:2;831:9;827:18;819:26;;855:71;923:1;912:9;908:17;899:6;855:71;:::i;:::-;809:124;;;;:::o;939:458::-;;1134:2;1123:9;1119:18;1111:26;;1147:71;1215:1;1204:9;1200:17;1191:6;1147:71;:::i;:::-;1228:72;1296:2;1285:9;1281:18;1272:6;1228:72;:::i;:::-;1310:80;1386:2;1375:9;1371:18;1362:6;1310:80;:::i;:::-;1101:296;;;;;;:::o;1403:96::-;;1469:24;1487:5;1469:24;:::i;:::-;1458:35;;1448:51;;;:::o;1505:90::-;;1582:5;1575:13;1568:21;1557:32;;1547:48;;;:::o;1601:126::-;;1678:42;1671:5;1667:54;1656:65;;1646:81;;;:::o;1733:77::-;;1799:5;1788:16;;1778:32;;;:::o;1816:121::-;;1907:24;1925:5;1907:24;:::i;:::-;1894:37;;1884:53;;;:::o;1943:116::-;2013:21;2028:5;2013:21;:::i;:::-;2006:5;2003:32;1993:2;;2049:1;2046;2039:12;1993:2;1983:76;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\n/**\r\n * @title TokenReceiver\r\n * @dev Very simple example of a contract receiving ERC20 tokens.\r\n */\r\ncontract TokenReceiver {\r\n\r\n    IERC20 private _token;\r\n    \r\n    event premioTokenDado(address recipient);\r\n\r\n    constructor (IERC20 token)  {\r\n        _token = token;\r\n    }\r\n\r\n    function premioToken() external {\r\n        address from = msg.sender;\r\n        _token.transferFrom(from, address(this), 1);\r\n        emit premioTokenDado(from);\r\n    } \r\n}",
  "sourcePath": "D:/Curso Solidity Avanzado BlockChain Academy/proyecto-react/contracts/TokenReceiver.sol",
  "ast": {
    "absolutePath": "/D/Curso Solidity Avanzado BlockChain Academy/proyecto-react/contracts/TokenReceiver.sol",
    "exportedSymbols": {
      "Context": [
        1365
      ],
      "ERC20": [
        1239
      ],
      "IERC20": [
        1317
      ],
      "IERC20Metadata": [
        1342
      ],
      "TokenReceiver": [
        732
      ]
    },
    "id": 733,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 687,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/D/Curso Solidity Avanzado BlockChain Academy/proyecto-react/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 688,
        "nodeType": "ImportDirective",
        "scope": 733,
        "sourceUnit": 1240,
        "src": "60:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 689,
          "nodeType": "StructuredDocumentation",
          "src": "135:100:2",
          "text": " @title TokenReceiver\n @dev Very simple example of a contract receiving ERC20 tokens."
        },
        "fullyImplemented": true,
        "id": 732,
        "linearizedBaseContracts": [
          732
        ],
        "name": "TokenReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 692,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "269:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1317",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 691,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 690,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1317,
                "src": "269:6:2"
              },
              "referencedDeclaration": 1317,
              "src": "269:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1317",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 696,
            "name": "premioTokenDado",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 694,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "325:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "324:19:2"
            },
            "src": "303:41:2"
          },
          {
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "380:33:2",
              "statements": [
                {
                  "expression": {
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 702,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "391:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1317",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 703,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 699,
                      "src": "400:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1317",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "391:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1317",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "391:14:2"
                }
              ]
            },
            "id": 707,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "365:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1317",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 698,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 697,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1317,
                      "src": "365:6:2"
                    },
                    "referencedDeclaration": 1317,
                    "src": "365:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1317",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:14:2"
            },
            "returnParameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:2"
            },
            "scope": 732,
            "src": "352:61:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "453:135:2",
              "statements": [
                {
                  "assignments": [
                    711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 711,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 730,
                      "src": "464:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 710,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "464:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 714,
                  "initialValue": {
                    "expression": {
                      "id": 712,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "479:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "479:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "464:25:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 718,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "520:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 721,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "534:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenReceiver_$732",
                              "typeString": "contract TokenReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenReceiver_$732",
                              "typeString": "contract TokenReceiver"
                            }
                          ],
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "526:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 719,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "526:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "526:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "541:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 715,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "500:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1317",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1298,
                      "src": "500:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "500:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "500:43:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 727,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "575:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 726,
                      "name": "premioTokenDado",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "559:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "EmitStatement",
                  "src": "554:26:2"
                }
              ]
            },
            "functionSelector": "843b2166",
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "premioToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "441:2:2"
            },
            "returnParameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:0:2"
            },
            "scope": 732,
            "src": "421:167:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 733,
        "src": "237:355:2"
      }
    ],
    "src": "33:559:2"
  },
  "legacyAST": {
    "absolutePath": "/D/Curso Solidity Avanzado BlockChain Academy/proyecto-react/contracts/TokenReceiver.sol",
    "exportedSymbols": {
      "Context": [
        1365
      ],
      "ERC20": [
        1239
      ],
      "IERC20": [
        1317
      ],
      "IERC20Metadata": [
        1342
      ],
      "TokenReceiver": [
        732
      ]
    },
    "id": 733,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 687,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/D/Curso Solidity Avanzado BlockChain Academy/proyecto-react/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 688,
        "nodeType": "ImportDirective",
        "scope": 733,
        "sourceUnit": 1240,
        "src": "60:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 689,
          "nodeType": "StructuredDocumentation",
          "src": "135:100:2",
          "text": " @title TokenReceiver\n @dev Very simple example of a contract receiving ERC20 tokens."
        },
        "fullyImplemented": true,
        "id": 732,
        "linearizedBaseContracts": [
          732
        ],
        "name": "TokenReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 692,
            "mutability": "mutable",
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 732,
            "src": "269:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1317",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 691,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 690,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1317,
                "src": "269:6:2"
              },
              "referencedDeclaration": 1317,
              "src": "269:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1317",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 696,
            "name": "premioTokenDado",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 694,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "325:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "324:19:2"
            },
            "src": "303:41:2"
          },
          {
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "380:33:2",
              "statements": [
                {
                  "expression": {
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 702,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "391:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1317",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 703,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 699,
                      "src": "400:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1317",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "391:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1317",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "391:14:2"
                }
              ]
            },
            "id": 707,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "365:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1317",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 698,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 697,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1317,
                      "src": "365:6:2"
                    },
                    "referencedDeclaration": 1317,
                    "src": "365:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1317",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:14:2"
            },
            "returnParameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:2"
            },
            "scope": 732,
            "src": "352:61:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "453:135:2",
              "statements": [
                {
                  "assignments": [
                    711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 711,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 730,
                      "src": "464:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 710,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "464:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 714,
                  "initialValue": {
                    "expression": {
                      "id": 712,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "479:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "479:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "464:25:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 718,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "520:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 721,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "534:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenReceiver_$732",
                              "typeString": "contract TokenReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenReceiver_$732",
                              "typeString": "contract TokenReceiver"
                            }
                          ],
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "526:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 719,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "526:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "526:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "541:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 715,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "500:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1317",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1298,
                      "src": "500:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "500:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "500:43:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 727,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "575:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 726,
                      "name": "premioTokenDado",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 696,
                      "src": "559:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "559:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "EmitStatement",
                  "src": "554:26:2"
                }
              ]
            },
            "functionSelector": "843b2166",
            "id": 731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "premioToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "441:2:2"
            },
            "returnParameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:0:2"
            },
            "scope": 732,
            "src": "421:167:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 733,
        "src": "237:355:2"
      }
    ],
    "src": "33:559:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x63fBdD194B40454C1ccf5474128c41Ec65Ba05B3",
      "transactionHash": "0x4e1a3a0bcbbd6450c84e089b022ab3f4cfef4d43ab5f2afb9809102c953be597"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-18T19:54:13.754Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Very simple example of a contract receiving ERC20 tokens.",
    "kind": "dev",
    "methods": {},
    "title": "TokenReceiver",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}